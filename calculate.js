const list_y = []; // множество значений y от 0 до n
const list_z = []; // множество значений z от 0 до n

// n должно быть целое, остальные дробные
let y; // искомая численность жертвы
let z; // искомая численность хищника
let n; // номер сезона размножения
let B; // репродуктивный потенциал жертвы
let w; // репродуктивный потенциал хищника
let yg; // константа полунасыщения хищника
let a; // коэффициент переработки потребленной хищником биомассы жертвы в собственную биомассу
let y0; // начальная численность жертвы
let z0; // начальная численность хищника

// тест 1
// соответсвует увеличению численности хищника и уменьшению жертвы
//n = 15;
//B = 10.3;
//w = 10.0;
//yg = 0.3;
//a = 0.5;
//y0 = 1.2;
//z0 = 1.3;

// тест 2
// соответсвует сосуществованию двух видов
//n = 15;
//B = 10.3;
//w = 10.0;
//yg = 5.9;
//a = 2.5;
//y0 = 0.92;
//z0 = 0.71;

// тест 3
// соответсвует увеличению численности жертвы и уменьшению хищника
n = 15;
B = 5.4;
w = 0.2;
yg = 0.5;
a = 0.5;
y0 = 0.1;
z0 = 0.1;

if (n < 0 || B < 0 || w < 0 || yg < 0 || a < 0 || y0 < 0 || z0 < 0) {
    console.log("Все введенные значения должны быть больше нуля! \n");
}

y = y0;
z = z0;
list_y.push(y);
list_z.push(z);

// расчет динамики
for (let i = 1; i <= n; ++i) {
    const y_last = y;
    const calc = (a * z) / (yg + y);
    if (calc > 1) {
        console.log("Значение дроби вне ОДЗ! \n"); // это впринципе не ошибка, но на этом нужно остановиться
        break;
    }
    y = B * (1 - calc) * y * Math.exp(-y);
    z = ((w * y_last) / (yg + y_last)) * z * Math.exp(-z);
    list_y.push(y);
    list_z.push(z);
}

// вывод в консоль результатов
for (const value of list_y) {
    console.log(value + " ");
}
console.log();

for (const value of list_z) {
    console.log(value + " ");
}
console.log();

